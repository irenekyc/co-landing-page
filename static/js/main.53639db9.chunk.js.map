{"version":3,"sources":["components/bars-solid.svg","theme.js","styles/GlobalStyle.js","Layout/Container.js","Layout/FlexBox.js","components/NavBar.js","data.js","components/HeroContent.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","bg","mainText","secondaryText","Link","blue","footerBG","GlobalStyle","createGlobalStyle","inactiveLink","Container","size","children","styled","div","props","wide","FlexBox","direction","justify","align","NavBar","nav","Logo","NavLinkItems","a","HamburgerBtn","openMobileMenu","console","log","src","alt","onClick","HamburgerIcon","as","href","DownloadData","id","title","img","remarks","HeroContent","ContentContainer","HeroHeading","h1","HeroText","p","Box","DownloadButton","button","Remarks","align-items","map","e","key","Footer","footer","FooterContent","Copyright","App","Hero","section","HeroBG","HeroBGUnder","HeroBGUp","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.53639db9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bars-solid.8f987511.svg\";","export const theme = {\n  bg: \"#EEF1FC\",\n  mainText: \"#384874\",\n  secondaryText: \"#8C919E\",\n  Link: \"#13274F\",\n  blue: \"#597FE2\",\n  footerBG: \"#E2E7FA\",\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport { theme } from \"../theme\";\n\nconst GlobalStyle = createGlobalStyle`\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box\n}\nbody{\n    width:100vw;\n    min-height: 100vh;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.2;\n    color: #000;\n}\na{\n    text-decoration: none;\n    color: ${theme.inactiveLink}\n}\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = ({ size, children }) => {\n  const Container = styled.div`\n    height: 100%;\n    margin: 0 auto;\n    width: ${(props) => (props.size.wide ? \"90%\" : \"80%\")};\n  `;\n\n  return <Container size={size}> {children} </Container>;\n};\n\nexport default Container;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FlexBox = ({ direction, justify, align, children }) => {\n  const FlexBox = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: ${direction};\n    justify-content: ${justify};\n    align-items: ${align};\n\n    @media (max-width: 1024px) {\n      flex-wrap: wrap;\n    }\n  `;\n\n  return <FlexBox> {children} </FlexBox>;\n};\n\nexport default FlexBox;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Container from \"../Layout/Container\";\nimport FlexBox from \"../Layout/FlexBox\";\nimport HamburgerIcon from \"./bars-solid.svg\";\n\nconst NavBar = ({ theme }) => {\n  const NavBar = styled.nav`\n    width: 100vw;\n    background: transparent;\n    padding: 4rem 0;\n    z-index: 10;\n  `;\n\n  const Logo = styled.div`\n    width: 50px;\n  `;\n\n  const NavLinkItems = styled.a`\n    color: ${theme.Link};\n    margin-right: 2rem;\n    z-index: 100;\n    position: relative;\n    opacity: 0.6;\n    &:after {\n      position: absolute;\n      content: \"\";\n      height: 4px;\n      width: 0;\n      transition: width 0.5s;\n      background: ${theme.blue};\n      bottom: -1rem;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n    &:hover {\n      opacity: 1;\n    }\n\n    &:hover:after {\n      width: 52px;\n    }\n    &:last-child {\n      margin-right: 0;\n    }\n\n    @media (max-width: 768px) {\n      display: none;\n    }\n  `;\n\n  const HamburgerBtn = styled.div`\n    @media (max-width: 768px) {\n      display: block;\n      width: 40px;\n      height: 40px;\n      color: ${theme.Link};\n      cursor: pointer;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 100;\n      img {\n        width: 60%;\n      }\n    }\n  `;\n\n  const openMobileMenu = () => {\n    console.log(\"click\");\n  };\n  return (\n    <NavBar>\n      <Container size=\"wide\">\n        <FlexBox direction=\"row\" justify=\"space-between\" align=\"center\">\n          <Logo>\n            <img src=\"assets/CO.svg\" alt=\"CO Logo\" />\n          </Logo>\n          <HamburgerBtn onClick={openMobileMenu}>\n            <img\n              src={HamburgerIcon}\n              alt=\"mobile menu button\"\n              onClick={openMobileMenu}\n            />\n          </HamburgerBtn>\n          <FlexBox direction=\"row\" justify=\"flex-end\" align=\"center\">\n            <NavLinkItems as=\"a\" href=\"#\">\n              Color Oracle\n            </NavLinkItems>\n            <NavLinkItems as=\"a\" href=\"#\">\n              How To\n            </NavLinkItems>\n            <NavLinkItems as=\"a\" href=\"#\">\n              Manual\n            </NavLinkItems>\n            <NavLinkItems as=\"a\" href=\"#\">\n              {\" \"}\n              Design Tips\n            </NavLinkItems>\n            <NavLinkItems as=\"a\" href=\"#\">\n              {\" \"}\n              Useful Links\n            </NavLinkItems>\n          </FlexBox>\n        </FlexBox>\n      </Container>\n    </NavBar>\n  );\n};\n\nexport default NavBar;\n","export const DownloadData = [\n  {\n    id: 1,\n    title: \"MAC\",\n    img: \"apple-mac.png\",\n    remarks: \"\",\n  },\n  {\n    id: 2,\n    title: \"Windows\",\n    img: \"windows.png\",\n    remarks: \"Requires Java 6 or higher\",\n  },\n  {\n    id: 3,\n    title: \"Linux\",\n    img: \"linux.png\",\n    remarks: \"Requires Java 6 or higher\",\n  },\n];\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport FlexBox from \"../Layout/FlexBox\";\nimport Container from \"../Layout/Container\";\nimport { DownloadData } from \"../data\";\n\nconst HeroContent = ({ theme }) => {\n  console.log(DownloadData);\n  const ContentContainer = styled.div`\n    padding-top: 8rem;\n    padding-bottom: 2rem;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    width: 100%;\n    z-index: 100;\n  `;\n\n  const HeroHeading = styled.h1`\n    font-size: 36px;\n    margin-bottom: 1rem;\n    font-weight: 500;\n    padding: 0 2rem;\n  `;\n\n  const HeroText = styled.p`\n    font-size: 20px;\n    line-height: 1.2;\n    margin-bottom: 3rem;\n    font-weight: 100;\n    width: 70%;\n    text-align: stretch;\n    margin: 0 auto;\n  `;\n\n  const Box = styled.div`\n    cursor: pointer;\n    margin-top: 3rem;\n    padding: 2rem 3rem;\n    background: white;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 24px;\n    max-width: 320px;\n    box-shadown: 1px 1px 2px rgba(0, 0, 0, 0.1);\n    margin-left: auto;\n    margin-right: auto;\n    img {\n      width: 75px;\n    }\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  `;\n\n  const DownloadButton = styled.button`\n    border: 1px solid ${theme.secondaryText};\n    border-radius: 5px;\n    font-size: 18px;\n    margin: 18px 0;\n    color: ${theme.secondaryText};\n    background: transparent;\n    width: 250px;\n    height: 60px;\n    line-height: 60px;\n    font-family: inherit;\n\n    ${Box}:hover & {\n      background: ${theme.blue};\n      color: white;\n      border: none;\n    }\n  `;\n\n  const Remarks = styled.p`\n    font-size: 14px;\n    color: #6d7593;\n  `;\n\n  return (\n    <ContentContainer>\n      <HeroHeading>Design for the color impaired</HeroHeading>\n      <HeroText>\n        Color Oracle is a free color blindness simulator for Windows, Mac and\n        Linux. It takes the guesswork out of designing for color blindness by\n        showing you in real time what people with common color vision\n        impairments will see.\n      </HeroText>\n      <Container size=\"narrow\">\n        <FlexBox direction=\"row\" justify=\"space-between\" align-items=\"center\">\n          {DownloadData.map((e) => {\n            return (\n              <Box key={e.id}>\n                <div>\n                  <img src={`assets/${e.img}`} alt={e.title} />\n                </div>\n                <div>\n                  {\" \"}\n                  <DownloadButton> Download for {e.title}</DownloadButton>\n                </div>\n                <Remarks>{e.remarks}</Remarks>\n              </Box>\n            );\n          })}\n        </FlexBox>\n      </Container>\n    </ContentContainer>\n  );\n};\n\nexport default HeroContent;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Container from \"../Layout/Container\";\nimport FlexBox from \"../Layout/FlexBox\";\n\nconst Footer = ({ theme }) => {\n  const Footer = styled.footer`\n    background: ${theme.footerBG};\n    padding-top: 4rem;\n    padding-bottom: 2rem;\n    width: 100%;\n  `;\n\n  const FooterContent = styled.div`\n    max-width: 350px;\n    padding: 1rem;\n\n    h4 {\n      font-size: 16px;\n      font-weight: 600;\n      margin-bottom: 11px;\n    }\n    p {\n      font-size: 14px;\n      font-weight: 300;\n    }\n  `;\n\n  const Copyright = styled.p`\n    text-align: center;\n    color: #13274f;\n    opacity: 0.6;\n    font-size: 14px;\n    margin-top: 4rem;\n  `;\n  return (\n    <Footer>\n      <Container size=\"wide\">\n        <FlexBox direction=\"row\" justify=\"space-between\" align=\"flex-start\">\n          <FooterContent>\n            <h4> About</h4>\n            <p>\n              Development: Bernie Jenny, Monash University, Australia. Ideas,\n              testing and icon: Nathaniel Vaughn Kelso, California.\n            </p>\n          </FooterContent>\n          <FooterContent>\n            <h4> Feedback</h4>\n            <p>\n              Color Oracle is a work in progress and will improve with time and\n              your input. Please share your Color Oracle testimonial with us and\n              send us an email.\n            </p>\n          </FooterContent>\n          <FooterContent>\n            {\" \"}\n            <h4>Source</h4>{\" \"}\n            <p>\n              Color Oracle is open source, available on GitHub for Mac and\n              Windows/Java.\n            </p>\n          </FooterContent>\n        </FlexBox>\n        <Copyright>\n          © 2006–2018 by Bernie Jenny, Monash University, Melbourne, Australia.\n          Last site update: 5 May 2018.\n        </Copyright>\n      </Container>\n    </Footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport { theme } from \"./theme\";\n\nimport NavBar from \"./components/NavBar\";\nimport HeroContent from \"./components/HeroContent\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const Hero = styled.section`\n    width: 100%;\n    min-height: 100vh;\n    position: relative;\n    overflow: hidden;\n    background: ${theme.bg};\n  `;\n  const HeroBG = styled.div`\n    position: absolute;\n    content: \" \";\n    width: 100%;\n  `;\n\n  const HeroBGUnder = styled(HeroBG)`\n    background: url(\"assets/Vector 1.svg\") no-repeat;\n    background-size: cover;\n    background-position: bottom center;\n    height: 250px;\n    top: -100px;\n    left: 0;\n  `;\n\n  const HeroBGUp = styled(HeroBG)`\n    background: url(\"assets/Vector 2.svg\") no-repeat;\n    background-size: cover;\n    background-position: bottom center;\n    height: 289px;\n    top: -150px;\n    left: 90px;\n  `;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Hero>\n        <HeroContent theme={theme} />\n        <NavBar theme={theme} />\n        <HeroBGUnder id=\"under\" />\n        <HeroBGUp id=\"upperbg\" />\n      </Hero>\n      <Footer theme={theme} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}